//09 - Part 1

In Tomcat container when servlet object is created once and when multiple user request to access that servlet than that servlet creates Thread for each user instead of creating new servlet objects.

The methods that runs before doGet() or doPost() method is init() and service() method.

			init(ServletConfig) -> First call

				|||

			   service() -> Looks at the request in which method to run
			
				|||

			doget()	   doPost()


Where does the init() and service() method comes from:

		GenericServlet -> init(ServletConfig),init(),service()
		    ||
		HTTPServlet -> service()
		   ||
		MyServlet -> doPost(),doGet()

In Java Servlets, the ServletConfig object provides configuration information for a particular servlet. It is used to pass initialization parameters to the servlet during its initialization phase.

Key Features of ServletConfig

- Initialization Parameters: It allows a servlet to retrieve initialization parameters defined in the deployment descriptor (web.xml) or annotations.
- Servlet-Specific: The ServletConfig object is unique to each servlet. This means each servlet can have its own initialization parameters.
- Access to the ServletContext: Through the ServletConfig object, you can access the ServletContext, which provides information about the web application.

//
A .class file in Java is a compiled version of a Java source file (.java). It is generated by the Java compiler (javac) and contains the bytecode that the Java Virtual Machine (JVM) executes.

//
init() is the first method that runs when servlet is initiated.So opening a database can be done in init(we have done in spring.)

Inorder to give default name for certain value, USE initParams and @WebInitParam

initParams = {@WebInitParam(name ="defaultUser", value = "Milan Lama")}

and when using this we are passing the config to init() method as a parameter so we can also we init() or override it

//getting initParams/initialization parameters

this.getServletConfig().getInitParameter("defaultUser");

--- GIVING DEFAULT VALUE IN WEB.XML Using <init-param/> <param-name> <param-value>

//
Simple init() without parameters for overriding

  @Override
    public void init() throws ServletException {
        // Custom initialization logic
        System.out.println("SimpleInitServlet has been initialized!");
    }
}

The init() method without parameters is called automatically by the servlet container during the servlet's lifecycle.

It is a good place to set up any resources, such as database connections or reading configuration properties, that the servlet needs.


// service() method

- Overridden at HTTPServlet
- Whole role of service method is to analyse the input request it is getting and check what kind of HTTP request method it is like ( POST, GET, PUT, PATCH, and DELETE) AND Depending upon the request it decides to calls the method doPost() or doGet().

